name: 'CI Multiplatform Build'

on: [push, pull_request]

jobs:
  ubuntu64:
    name: 'Build_linux'
    runs-on: [ubuntu-18.04]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.3
      - name: 'Install dependencies'
        shell: bash
        working-directory: ${{ github.workspace }}
        run: ./ci/linux/install-dependencies-ubuntu.sh
      - name: 'Build Plugin'
        shell: bash
        working-directory: ${{ github.workspace }}
        run: ./ci/linux/build-ubuntu.sh
      - name: 'Package Plugin'
        shell: bash
        working-directory: ${{ github.workspace }}
        run: ./ci/linux/package-ubuntu.sh
  macos:
    name: 'Build_macos'
    runs-on: [macos-latest]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.3
      - name: 'Install dependencies'
        shell: bash
        working-directory: ${{ github.workspace }}
        run: ./ci/macos/install-dependencies-macos.sh
      - name: 'Build OBS'
        shell: bash
        working-directory: ${{ github.workspace }}
        run: ./ci/macos/install-build-obs-macos.sh
      - name: 'Build Plugin'
        shell: bash
        working-directory: ${{ github.workspace }}
        run: ./ci/macos/build-macos.sh
  win64:
    name: 'Build_win64'
    runs-on: [windows-latest]
    env:
      QT_VERSION: '5.15.2'
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      CMAKE_SYSTEM_VERSION: "10.0.18363.657"
      WINDOWS_DEPS_VERSION: '2019'
      WINDOWS_DEPS_CACHE_VERSION: '1'
    steps:
      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1.0.2
      - name: 'Checkout'
        uses: actions/checkout@v2.3.3
      - name: 'Restore QT dependency from cache'
        id: qt-cache
        uses: actions/cache@v2.1.2
        env:
          CACHE_NAME: 'windows-qt-cache'
        with:
          path: ${{ github.workspace }}/cmbuild/QT
          key: ${{ runner.os }}-pr-${{ env.CACHE_NAME }}-${{ env.QT_VERSION }}
      - name: 'Install Qt'
        shell: bash
        if: steps.qt-cache.outputs.cache-hit != 'true'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/Qt_${{ env.QT_VERSION }}.7z -f --retry 5 -C -
          7z x Qt_${{ env.QT_VERSION }}.7z -o"${{ github.workspace }}/cmbuild/QT"
      - name: 'Restore pre-built dependencies from cache'
        id: deps-cache
        uses: actions/cache@v2.1.2
        env:
          CACHE_NAME: 'windows-deps-cache'
        with:
          path: ${{ github.workspace }}/cmbuild/deps
          key: ${{ runner.os }}-pr-${{ env.CACHE_NAME }}-${{ env.WINDOWS_DEPS_VERSION }}-${{ env.WINDOWS_DEPS_CACHE_VERSION }}
      - name: 'Install prerequisite: Pre-built dependencies'
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/dependencies${{ env.WINDOWS_DEPS_VERSION }}.zip -f --retry 5 -C -
          7z x dependencies${{ env.WINDOWS_DEPS_VERSION }}.zip -o"${{ github.workspace }}/cmbuild/deps"
      - name: 'Build OBS'
        run: |
          git clone https://github.com/obsproject/obs-studio
          cd obs-studio
          mkdir build64
          cd build64
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"x64" -DCMAKE_SYSTEM_VERSION="${{ env.CMAKE_SYSTEM_VERSION }}" -DDISABLE_PLUGINS=true -DDepsPath="${{ github.workspace }}/cmbuild/deps/win64" -DQTDIR="${{ github.workspace }}/cmbuild/QT/${{ env.QT_VERSION }}/msvc2019_64" -DCOPIED_DEPENDENCIES=FALSE -DCOPY_DEPENDENCIES=TRUE ..
          msbuild /m /p:Configuration=RelWithDebInfo .\obs-studio.sln
      - name: 'Build Plugin'
        working-directory: ${{ github.workspace }}
        run: |
          mkdir build64
          cd build64
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"x64"
                -DCMAKE_SYSTEM_VERSION="${{ env.CMAKE_SYSTEM_VERSION }}"
                -DQTDIR="${{ github.workspace }}/cmbuild/QT/${{ env.QT_VERSION }}/msvc2019_64"
                -DLibObs_DIR="${{ github.workspace }}\obs-studio\build64\libobs"
                -DLIBOBS_INCLUDE_DIR="${{ github.workspace }}\obs-studio\libobs"
                -DLIBOBS_LIB="${{ github.workspace }}\obs-studio\build64\libobs\RelWithDebInfo\obs.lib"
                -DOBS_FRONTEND_LIB="${{ github.workspace }}\obs-studio\build64\UI\obs-frontend-api\RelWithDebInfo\obs-frontend-api.lib" ..
          msbuild /m /p:Configuration=RelWithDebInfo .\obs-text-slideshow.sln
  win32:
    name: 'Build_win32'
    runs-on: [windows-latest]
    env:
      QT_VERSION: '5.15.2'
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      CMAKE_SYSTEM_VERSION: "10.0.18363.657"
      WINDOWS_DEPS_VERSION: '2019'
      WINDOWS_DEPS_CACHE_VERSION: '1'
    steps:
      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1.0.2
      - name: 'Checkout'
        uses: actions/checkout@v2.3.3
      - name: 'Restore QT dependency from cache'
        id: qt-cache
        uses: actions/cache@v2.1.2
        env:
          CACHE_NAME: 'windows-qt-cache'
        with:
          path: ${{ github.workspace }}/cmbuild/QT
          key: ${{ runner.os }}-pr-${{ env.CACHE_NAME }}-${{ env.QT_VERSION }}
      - name: 'Install Qt'
        shell: bash
        if: steps.qt-cache.outputs.cache-hit != 'true'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/Qt_${{ env.QT_VERSION }}.7z -f --retry 5 -C -
          7z x Qt_${{ env.QT_VERSION }}.7z -o"${{ github.workspace }}/cmbuild/QT"
      - name: 'Restore pre-built dependencies from cache'
        id: deps-cache
        uses: actions/cache@v2.1.2
        env:
          CACHE_NAME: 'windows-deps-cache'
        with:
          path: ${{ github.workspace }}/cmbuild/deps
          key: ${{ runner.os }}-pr-${{ env.CACHE_NAME }}-${{ env.WINDOWS_DEPS_VERSION }}-${{ env.WINDOWS_DEPS_CACHE_VERSION }}
      - name: 'Install prerequisite: Pre-built dependencies'
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/dependencies${{ env.WINDOWS_DEPS_VERSION }}.zip -f --retry 5 -C -
          7z x dependencies${{ env.WINDOWS_DEPS_VERSION }}.zip -o"${{ github.workspace }}/cmbuild/deps"
      - name: 'Build OBS'
        run: |
          git clone https://github.com/obsproject/obs-studio
          cd obs-studio
          mkdir build32
          cd build32
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"Win32" -DCMAKE_SYSTEM_VERSION="${{ env.CMAKE_SYSTEM_VERSION }}" -DDISABLE_PLUGINS=true -DDepsPath="${{ github.workspace }}/cmbuild/deps/win32" -DQTDIR="${{ github.workspace }}/cmbuild/QT/${{ env.QT_VERSION }}/msvc2019" -DCOPIED_DEPENDENCIES=FALSE -DCOPY_DEPENDENCIES=TRUE ..
          msbuild /m /p:Configuration=RelWithDebInfo .\obs-studio.sln
      - name: 'Build Plugin'
        working-directory: ${{ github.workspace }}
        run: |
          mkdir build32
          cd build32
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"Win32" -DCMAKE_SYSTEM_VERSION="${{ env.CMAKE_SYSTEM_VERSION }}" -DQTDIR="${{ github.workspace }}/cmbuild/QT/${{ env.QT_VERSION }}/msvc2019" -DLibObs_DIR="${{ github.workspace }}\obs-studio\build32\libobs" -DLIBOBS_INCLUDE_DIR="${{ github.workspace }}\obs-studio\libobs" -DLIBOBS_LIB="${{ github.workspace }}\obs-studio\build32\libobs\RelWithDebInfo\obs.lib" -DOBS_FRONTEND_LIB="${{ github.workspace }}\obs-studio\build32\UI\obs-frontend-api\RelWithDebInfo\obs-frontend-api.lib" ..
          msbuild /m /p:Configuration=RelWithDebInfo .\obs-text-slideshow.sln
